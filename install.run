#!/bin/bash
echo "Starting DowntimeBot Installation..."
if [[ $EUID -ne 0 ]]; then
   echo "Install failed. Root permissions required"
   exit 1
fi
systemctl stop downtime
echo "Installing Required Packages..."
apt-get install python3 python3-pip aptitude dialog -y -qq
pip3 install telepot -q
if [ -e /usr/bin/downtime/db ]; then
  echo "Backing up configuration files..."
  mkdir /tmp/downtime
  cp -R /usr/bin/downtime/db/* /tmp/downtime
else
  echo "Configuration files not detected."
  dialog --yesno "[WARNING] If this is a fresh install, it's okay to press ENTER. If you are upgrading Downtime, press Ctrl+C now as the installer has not detected configuration files." 0 0
  response = $?
  case response in
    0) echo "Continuing Installation...";;
    1) exit;;
    255) exit;;
  esac
fi
rm -rf /usr/bin/downtime/
rm -rf /usr/bin/downtime-cli
mkdir /usr/bin/downtime/
mkdir /usr/bin/downtime/db
mkdir /usr/bin/downtime/logs
cp -R install/* /usr/bin/downtime/
mv /usr/bin/downtime/downtime.service /etc/systemd/system/
mv /usr/bin/downtime/downtime-cli /usr/bin
chmod +x /usr/bin/downtime/*
chmod +x /usr/bin/downtime-cli
if [ -e /tmp/downtime ]; then
  echo "Copying old config files to new installation..."
  cp -R /tmp/downtime/* /usr/bin/downtime/db/
  rm -rf /tmp/downtime/
  echo "Upgrade Complete"
  echo "Reloading Systemd..."
  systemctl daemon-reload
  echo "Enabling Downtime..."
  systemctl enable downtime
  echo "Starting Downtime..."
  systemctl start downtime
  exit
fi
echo "Install Complete"
echo "Enter your Bot Token:"
read BotToken
python3 /usr/bin/downtime/setup.py init $BotToken
configInit=$(python3 /usr/bin/downtime/setup.py check)
echo "Reloading Systemd..."
systemctl daemon-reload
echo "Enabling Downtime..."
systemctl enable downtime
echo "Starting Downtime..."
systemctl start downtime
if [ $configInit == "0" ]; then
  echo "Configuration Complete."
else
  echo "Configuration Failed."
fi
